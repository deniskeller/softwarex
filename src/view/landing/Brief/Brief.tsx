import React, { useState } from 'react';
import s from './Brief.module.scss';
import {
  BaseButton,
  BaseCheckbox,
  BaseContainer,
  BaseInput,
} from '@base/index';
import { ToMainPage, Toast } from '@content/landing/index';
import { useRouter } from 'next/router';
import toast from 'react-hot-toast';
import Link from 'next/link';
import BaseInputPhone from '@base/BaseInputPhone/BaseInputPhone';

interface IFormData {
  name: string;
  surname: string;
  companyName: string;
  project: string;
  email: string;
  phone: string;
}

const budgetList = ['< 1 m', '1-3 m', '3-5 m', '5-10 m', '10-30 m', 'More'];
const serviceList = [
  'Audit',
  'Consulting',
  'Development',
  'Design	',
  'Prototype ',
  'Tech. assignment',
  'Analytics',
  'Other',
];

const Brief: React.FC = () => {
  const router = useRouter();
  //ФОРМА
  const [value, setValue] = React.useState<IFormData>({
    name: '',
    surname: '',
    companyName: '',
    project: '',
    email: '',
    phone: '',
  });

  const setNewValue = (value: string, prop: keyof IFormData) => {
    setValue((prev) => ({ ...prev, [prop]: value }));
  };

  //checkbox
  const [checked, setChecked] = React.useState<any>({
    isChecked1: false,
    isChecked2: false,
  });

  //ПОФИКСИТЬ тайприпт
  const setNewValue2 = (key: string) => {
    setChecked((prevState: { [x: string]: any }) => {
      const newState = { ...prevState };
      newState[key] = !prevState[key];
      return newState;
    });
  };

  const [budget, setBudget] = useState('');
  const [service, setService] = useState('');

  const [error, setError] = useState('');
  const submitHandler = (e: { preventDefault: () => void }) => {
    e.preventDefault();
    if (value.name != '') {
      // router.push('/');
      toast.custom(<Toast />, {
        duration: 3000,
      });
    } else {
      setError('Поле не должно быть пустым!');
    }
  };

  return (
    <section className={s.Brief}>
      <BaseContainer>
        <div className={s.Brief_Container}>
          <svg
            viewBox="0 0 257 313"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className={s.Brief_FlowerOrange}
          >
            <path
              d="M109.329 76.5259C96.9391 63.5809 89.0482 45.8493 96.5418 26.4363C97.7116 23.194 99.3561 19.9929 102.089 17.1023C104.822 14.2118 108.783 11.8596 112.668 11.2269C117.601 10.4696 121.533 12.8615 123.241 16.0308C124.948 19.2 124.74 23.2812 124.392 27.1345C122.411 43.791 116.88 60.8937 109.329 76.5259Z"
              fill="#F98973"
            />
            <path
              d="M101.693 116.153C78.6346 112.759 61.5388 99.0214 57.6212 80.2448C56.7217 75.9209 57.1752 70.0147 62.6521 66.7893C66.1319 64.726 70.4645 64.7696 73.2635 66.039C76.0625 67.3084 77.9024 69.6617 79.5106 71.9831C89.1505 85.468 96.4504 100.289 101.693 116.153Z"
              fill="#F98973"
            />
            <path
              opacity="0.51"
              d="M65.7948 87.0082C65.3127 86.0576 64.8307 85.107 65.0947 83.9275C65.1873 82.8349 66.1973 81.4265 67.5179 81.0556C69.3528 80.4239 70.8728 81.2962 71.9294 82.1048C75.28 84.887 94.6419 99.2677 87.6499 104.606C80.8295 109.857 67.6024 90.5728 65.7948 87.0082Z"
              fill="#F98973"
            />
            <path
              d="M120.694 94.1174C119.65 80.1574 123.142 64.9428 130.574 50.2701C132.019 47.5953 133.464 44.9204 136.017 42.7296C138.571 40.5387 142.231 38.8318 145.303 39.3652C149.071 39.9941 149.84 43.637 149.906 46.7408C149.889 62.4338 138.834 80.5869 120.694 94.1174Z"
              fill="#F98973"
            />
            <path
              d="M128.768 123.638C132.936 107.633 137.67 91.0414 150.009 76.2703C151.867 73.9838 154.128 71.6423 156.811 70.1325C159.605 68.4169 163.052 67.565 165.439 68.446C167.765 69.2083 168.678 71.434 168.493 73.6191C168.308 75.8043 167.145 78.1864 165.922 80.4498C158.088 95.1774 145.851 109.299 128.768 123.638Z"
              fill="#F98973"
            />
            <path
              d="M101.455 143.313C89.6112 145.883 77.7717 145.912 68.1746 142.712C58.5776 139.513 51.5149 133.235 48.7986 124.903C47.9271 121.91 47.9544 117.713 51.6566 115.238C53.7046 113.752 56.5266 113.366 58.8435 113.685C61.1605 114.004 62.801 115.114 64.5527 116.018C77.7693 123.806 89.0075 133.642 101.455 143.313Z"
              fill="#F98973"
            />
            <path
              d="M137.1 157.503C139.725 142.28 145.627 126.291 158.035 112.082C160.065 109.709 162.386 107.486 165.18 105.771C168.034 104.174 171.593 103.116 173.979 103.997C176.306 104.759 177.33 106.779 177.316 108.878C177.363 111.095 176.543 113.303 175.552 115.598C168.552 131.546 154.61 146.981 137.1 157.503Z"
              fill="#F98973"
            />
            <path
              d="M119.563 180.285C95.8103 187.848 71.1902 184.35 58.4457 171.543C56.1424 169.126 54.0522 165.854 56.3456 162.301C58.1942 159.571 62.0262 157.777 65.483 157.369C68.9398 156.96 71.9612 157.818 74.7509 158.644C91.146 163.774 104.947 171.863 119.563 180.285Z"
              fill="#F98973"
            />
            <path
              d="M151.434 185.338C157.72 168.408 164.229 151.066 177.123 135.267C179.264 132.687 181.636 130.14 184.833 128.369C188.031 126.599 191.941 125.811 194.398 127.254C197.146 128.848 196.474 132.624 195.33 135.893C188.909 154.684 172.382 173.521 151.434 185.338Z"
              fill="#F98973"
            />
            <path
              opacity="0.51"
              d="M182.517 139.104C183.244 137.988 184.254 136.58 185.686 136.003C187.118 135.427 188.689 135.974 189.171 136.925C189.824 137.788 189.62 139.087 189.528 140.179C188.125 147.613 182.389 155.003 176.643 161.949C174.109 165.027 171.575 168.104 168.336 170.643C166.348 172.249 160.63 174.999 162.743 171.089C166.584 164.212 171.291 157.344 175.535 150.412C177.828 146.859 180.172 142.982 182.517 139.104Z"
              fill="#F98973"
            />
            <path
              d="M132.47 209.15C112.161 218.402 88.8947 218.848 74.6215 210.252C71.8735 208.658 69.4497 206.003 71.1778 203.036C72.3499 201.097 74.8011 199.555 77.3311 199.019C79.8009 198.364 82.229 198.478 84.3143 198.765C102.085 200.657 115.663 209.158 132.47 209.15Z"
              fill="#F98973"
            />
            <path
              d="M164.83 210.061C171.071 196.44 177.251 182.701 187.55 169.86C189.126 167.866 191.044 165.698 193.263 164.125C195.654 162.464 198.578 161.43 201.127 161.78C203.675 162.131 204.931 164.183 204.978 166.4C205.024 168.617 204.033 170.912 203.042 173.207C195.833 187.469 182.025 201.043 164.83 210.061Z"
              fill="#F98973"
            />
            <path
              d="M151.465 236.41C133.278 247.723 109.965 251.478 94.0149 245.525C90.5811 244.279 87.0081 241.908 88.3747 238.228C89.4171 235.608 92.7763 233.307 96.0524 232.542C99.2682 231.658 102.391 231.867 105.515 232.076C120.788 233.293 135.788 235.247 151.465 236.41Z"
              fill="#F98973"
            />
            <path
              opacity="0.51"
              d="M97.5737 244.465C96.2345 243.949 94.7145 243.077 95.3214 241.723C95.9885 240.489 97.652 239.944 99.2043 239.605C106.22 238.139 112.819 238.826 119.246 239.6C125.21 240.31 132.082 240.261 137.712 241.588C136.873 242.91 131.753 243.863 130.09 244.408C127.217 245.118 124.515 245.741 121.693 246.126C116.049 246.897 110.679 246.931 105.581 246.23C102.801 245.847 99.9603 245.346 97.5737 244.465Z"
              fill="#F98973"
            />
            <path
              d="M182.136 231.016C186.713 217.94 193.426 204.826 203.684 192.753C205.148 190.965 206.844 189.209 208.781 187.928C210.889 186.56 213.53 185.819 215.504 186.311C217.418 186.685 218.433 188.262 218.41 189.917C218.619 191.603 217.85 193.487 217.192 195.165C211.596 209.206 198.483 222.876 182.136 231.016Z"
              fill="#F98973"
            />
            <path
              d="M194.291 276.234C194.764 276.741 195.631 276.749 196.488 276.315C196.659 276.228 196.659 276.228 196.891 276.26C197.688 275.706 198.012 274.646 197.539 274.138C139.461 209.334 107.881 127.506 106.565 37.3537"
              stroke="#6D6BCE"
            />
            <path
              d="M118.099 125.639C101.81 117.318 83.5776 103.382 75.7031 88.7031"
              stroke="#6D6BCE"
            />
            <path
              d="M132.47 66.3397C129.645 80.3198 123.203 90.9446 113.376 104.293"
              stroke="#6D6BCE"
            />
            <path
              d="M147.47 92.9408C142.81 107.553 133.208 119.661 120.017 132.325"
              stroke="#6D6BCE"
            />
            <path
              d="M123.024 143.728C101.055 145.457 76.9924 141.829 62.7422 131.578"
              stroke="#6D6BCE"
            />
            <path
              d="M163.382 121.769C155.223 137.558 144.179 150.173 130.561 164.547"
              stroke="#6D6BCE"
            />
            <path
              d="M137.194 180.669C118.492 181.19 97.0836 179.736 82.8477 172.914"
              stroke="#6D6BCE"
            />
            <path
              d="M175.318 148.279C176.245 148.406 176.778 149.032 176.333 149.855C168.981 165.533 157.454 179.998 143.243 193.627"
              stroke="#6D6BCE"
            />
            <path
              d="M149.274 206.406C129.942 209.935 108.229 212.776 91.125 209.648"
              stroke="#6D6BCE"
            />
            <path
              d="M156.303 219.167C155.618 219.515 154.751 219.506 154.339 219.118C153.694 218.697 153.847 217.724 154.584 217.051C168.48 204.926 179.738 191.001 187.23 176.448C187.674 175.625 188.703 175.103 189.63 175.23C190.557 175.358 190.918 176.071 190.473 176.894C182.931 191.772 171.279 206.196 156.929 218.7C156.646 218.993 156.475 219.08 156.303 219.167Z"
              fill="#F98973"
            />
            <path
              d="M110.602 240.398C127.335 242.37 145.606 240.573 163.793 234.786C163.793 234.786 163.964 234.699 164.136 234.612C164.822 234.265 165.327 233.561 165.257 232.998C165.299 232.23 164.251 231.865 163.334 232.181"
              stroke="#6D6BCE"
            />
            <path
              d="M170.187 242.299C169.501 242.647 168.463 242.725 167.991 242.218C167.518 241.711 167.671 240.737 168.468 240.183C184.671 227.934 197.867 212.728 205.854 197.027C206.298 196.204 207.327 195.682 208.254 195.81C209.181 195.937 209.542 196.65 209.097 197.473C200.948 213.705 187.187 229.496 170.53 242.125C170.53 242.125 170.359 242.212 170.187 242.299Z"
              fill="#F98973"
            />
          </svg>

          <svg
            viewBox="0 0 375 506"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className={s.Brief_FlowerViolet}
          >
            <path
              d="M229.152 119.183C248.126 95.54 262.242 65.0998 256.602 35.2284C255.767 30.2217 254.302 25.3838 251.347 21.2824C248.392 17.181 243.717 14.2155 238.772 14.0217C232.483 13.8506 226.83 18.5709 223.918 24.0753C221.006 29.5798 220.405 36.1523 220.034 42.3257C219.057 68.9083 222.626 95.4542 229.152 119.183Z"
              fill="#6D6BCE"
            />
            <path
              d="M230.645 181.803C261.524 171.361 286.821 145.426 295.966 114.142C298.068 106.939 298.74 97.4594 292.269 93.4028C288.161 90.8027 282.486 91.8014 278.554 94.4591C274.622 97.1169 271.712 101.327 269.112 105.435C253.618 129.364 240.898 154.958 230.645 181.803Z"
              fill="#6D6BCE"
            />
            <path
              opacity="0.51"
              d="M283.833 126.858C284.667 125.214 285.501 123.569 285.408 121.713C285.521 119.962 284.502 117.895 282.855 117.576C280.591 116.945 278.416 118.685 276.862 120.222C271.884 125.451 243.486 152.915 251.485 160.072C259.279 167.126 280.706 133.025 283.833 126.858Z"
              fill="#6D6BCE"
            />
            <path
              d="M210.516 150.154C214.871 127.296 213.563 103.375 206.989 81.1761C205.672 77.1486 204.354 73.1212 201.485 70.1158C198.616 67.1103 194.195 65.1268 190.063 66.6496C185.002 68.4764 183.216 74.5478 182.466 79.5943C179.126 105.035 189.693 132.101 210.516 150.154Z"
              fill="#6D6BCE"
            />
            <path
              d="M193.64 199.742C191.617 174.683 188.98 148.796 176.01 127.489C174.07 124.179 171.615 120.867 168.43 118.993C165.144 116.81 160.819 116.167 157.509 118.107C154.304 119.841 152.633 123.646 152.407 127.149C152.181 130.652 153.192 134.266 154.306 137.674C161.396 159.875 174.372 180.152 193.64 199.742Z"
              fill="#6D6BCE"
            />
            <path
              d="M225.14 225.791C240.077 227.421 255.553 224.932 268.788 217.688C282.022 210.445 292.602 198.754 297.939 184.662C299.72 179.622 300.583 172.823 296.272 169.604C293.912 167.632 290.305 167.611 287.207 168.625C284.109 169.638 281.726 171.789 279.241 173.63C260.291 189.088 243.489 207.444 225.14 225.791Z"
              fill="#6D6BCE"
            />
            <path
              d="M175.487 256.434C175.314 232.313 171.022 207.654 157.84 187.273C155.695 183.86 153.135 180.753 149.849 178.57C146.459 176.592 142.032 175.639 138.722 177.579C135.517 179.313 133.745 182.808 133.314 186.207C132.778 189.812 133.377 193.216 134.182 196.726C139.919 221.084 154.844 243.124 175.487 256.434Z"
              fill="#6D6BCE"
            />
            <path
              d="M193.546 289.622C222.985 296.797 255.928 285.851 275.336 262.356C278.866 257.944 282.3 252.191 280.062 246.922C278.23 242.891 273.603 240.804 269.17 240.882C264.737 240.96 260.603 242.998 256.778 244.935C234.24 256.764 214.462 272.835 193.546 289.622Z"
              fill="#6D6BCE"
            />
            <path
              d="M150.786 304.639C146.192 278.535 141.395 251.811 127.918 228.955C125.672 225.231 123.115 221.609 119.314 219.423C115.512 217.237 110.567 216.797 107.046 219.663C103.111 222.836 103.181 228.815 103.977 233.87C108.348 262.963 125.924 289.965 150.786 304.639Z"
              fill="#6D6BCE"
            />
            <path
              opacity="0.51"
              d="M120.046 236.328C119.334 234.675 118.315 232.607 116.566 231.979C114.817 231.351 112.646 232.575 111.812 234.22C110.773 235.76 110.761 237.821 110.648 239.573C110.891 251.325 116.808 262.079 122.833 272.111C125.488 276.558 128.143 281.006 131.834 284.428C134.09 286.606 140.977 289.84 139.052 283.954C135.503 273.626 130.819 263.498 126.754 253.167C124.516 247.898 122.281 242.113 120.046 236.328Z"
              fill="#6D6BCE"
            />
            <path
              d="M170.485 339.18C195.06 349.833 225.388 345.572 245.894 328.577C249.828 325.404 253.566 320.58 251.942 316.139C250.825 313.246 247.95 311.272 244.756 310.944C241.667 310.412 238.468 311.115 235.68 312.027C212.036 318.902 192.46 335.593 170.485 339.18Z"
              fill="#6D6BCE"
            />
            <path
              d="M127.969 347.591C122.727 326.843 117.588 305.89 106.871 287.275C105.238 284.38 103.194 281.276 100.629 279.2C97.8578 277.02 94.2561 275.969 90.8483 277.083C87.4404 278.198 85.3586 281.794 84.8228 285.398C84.287 289.003 85.0918 292.512 85.8966 296.021C92.2684 317.6 107.416 336.652 127.969 347.591Z"
              fill="#6D6BCE"
            />
            <path
              d="M139.803 387.451C161.161 401.899 190.841 402.995 212.973 389.926C217.731 387.17 222.91 382.561 221.912 376.886C221.11 372.861 217.21 369.85 213.09 369.311C209.074 368.567 204.945 369.574 200.817 370.582C180.584 375.827 160.551 382.208 139.803 387.451Z"
              fill="#6D6BCE"
            />
            <path
              opacity="0.51"
              d="M208.55 388.972C210.411 387.848 212.586 386.108 212.082 384.044C211.474 382.185 209.416 381.658 207.458 381.441C198.599 380.566 189.823 383.094 181.253 385.725C173.302 388.154 164.327 389.546 156.68 392.905C157.493 394.868 163.985 395.317 166.043 395.844C169.648 396.379 173.047 396.811 176.655 396.831C183.87 396.872 190.885 395.778 197.701 393.549C201.418 392.333 205.24 390.912 208.55 388.972Z"
              fill="#6D6BCE"
            />
            <path
              d="M100.855 385.265C97.6713 365.044 91.7019 345.22 80.874 327.842C79.3425 325.256 77.5012 322.772 75.2429 321.11C72.779 319.344 69.4842 318.707 66.7973 319.928C64.2146 320.944 62.5497 323.718 62.2253 326.396C61.5912 329.176 62.1933 332.065 62.6941 334.645C67.0044 356.212 81.2226 375.568 100.855 385.265Z"
              fill="#6D6BCE"
            />
            <path
              d="M75.2761 461.194C74.5494 462.117 73.4144 462.317 72.3866 461.796C72.181 461.692 72.181 461.692 71.8712 461.793C70.9477 461.066 70.7508 459.416 71.4776 458.492C161.303 340.978 220.124 201.538 241.155 55.0819"
              stroke="#413C7C"
            />
            <path
              d="M207.158 200.703C230.24 183.723 257.067 157.221 270.508 131.734"
              stroke="#413C7C"
            />
            <path
              d="M201.069 107.629C201.769 129.691 207.917 145.539 217.909 165.077"
              stroke="#413C7C"
            />
            <path
              d="M175.76 153.977C178.724 176.671 188.686 194.248 203.223 211.956"
              stroke="#413C7C"
            />
            <path
              d="M196.845 231.08C225.202 229.179 257.444 218.142 278.273 198.469"
              stroke="#413C7C"
            />
            <path
              d="M148.781 204.12C156.068 227.972 167.808 246.061 182.536 266.45"
              stroke="#413C7C"
            />
            <path
              d="M170.411 294.012C194.755 290.851 223.06 283.908 243.137 269.797"
              stroke="#413C7C"
            />
            <path
              d="M127.491 249.67C126.252 250.075 125.421 251.205 125.826 252.444C132.082 276.29 144.057 297.275 159.72 316.329"
              stroke="#413C7C"
            />
            <path
              d="M149.099 338.33C173.622 339.912 201.406 339.867 224.441 331.133"
              stroke="#413C7C"
            />
            <path
              d="M137.173 360.531C137.995 360.948 139.13 360.748 139.753 360.03C140.685 359.211 140.694 357.665 139.875 356.733C124.301 340.049 112.562 319.883 105.883 297.89C105.478 296.651 104.244 296.025 103.005 296.43C101.766 296.836 101.14 298.069 101.546 299.308C108.221 321.817 120.369 342.707 136.455 359.909C136.762 360.323 136.968 360.427 137.173 360.531Z"
              fill="#6D6BCE"
            />
            <path
              d="M192.387 385.164C170.084 391.944 146.577 392.945 124.034 387.458C124.034 387.458 123.828 387.353 123.623 387.249C122.801 386.832 122.291 385.798 122.502 384.872C122.612 383.636 124.06 382.819 125.192 383.135"
              stroke="#413C7C"
            />
            <path
              d="M114.062 401.014C114.884 401.431 116.225 401.335 116.952 400.412C117.678 399.488 117.687 397.942 116.764 397.215C98.1994 380.824 84.2013 358.996 77.1203 335.248C76.715 334.009 75.4816 333.384 74.2424 333.789C73.0031 334.194 72.3777 335.428 72.783 336.667C79.9625 361.24 94.5743 383.896 113.651 400.805C113.651 400.805 113.857 400.91 114.062 401.014Z"
              fill="#6D6BCE"
            />
          </svg>

          <div className={s.Brief_Content}>
            <div className={s.Text}>
              <div className={s.Text_Title}>
                <h1>Fill out short brief</h1>
              </div>

              <div className={s.Text_Description}>
                <p>
                  Complete the form below, and our English & Indian Software Exs
                  managers will reach out to you via email to confirm the order
                  and provide an invoice. If you need any additional services,
                  please leave a comment in the message field.
                </p>
              </div>

              <ToMainPage className={s.Text_ToMainPage} />
            </div>

            <form
              className={s.Form}
              onSubmit={submitHandler}
              autoComplete="off"
            >
              <div className={s.Form_Fields}>
                <BaseInput
                  name="name"
                  placeholder="Name"
                  label="Name"
                  value={value.name}
                  onChange={(val: string) => setNewValue(val, 'name')}
                  error={error}
                />

                <BaseInput
                  name="surname"
                  placeholder="Surname"
                  label="Surname"
                  value={value.surname}
                  onChange={(val: string) => setNewValue(val, 'surname')}
                />

                <BaseInput
                  name="companyName"
                  placeholder="Company name"
                  label="Company name"
                  value={value.companyName}
                  onChange={(val: string) => setNewValue(val, 'companyName')}
                />

                <BaseInput
                  name="project"
                  placeholder="Project"
                  label="Project"
                  value={value.project}
                  onChange={(val: string) => setNewValue(val, 'project')}
                />

                <BaseInput
                  name="email"
                  placeholder="Email"
                  label="Email"
                  value={value.email}
                  onChange={(val: string) => setNewValue(val, 'email')}
                />

                <BaseInputPhone
                  name="phone"
                  placeholder="Phone"
                  label="Phone"
                  value={value.phone}
                  onChange={(val: string) => setNewValue(val, 'phone')}
                />
              </div>

              <div className={s.Form_Categorys}>
                <div className={s.Budget}>
                  <div className={s.Budget_Title}>
                    <span>Budget, €</span>
                  </div>
                  <div className={s.Budget_Tags}>
                    {budgetList?.map((item, index) => {
                      return (
                        <div
                          className={`${s.TagItem} ${
                            budget == item ? s.TagItem__Active : ''
                          }`}
                          key={index}
                          onClick={() => setBudget(item)}
                        >
                          <span className={s.TagItem_Name}>{item}</span>
                        </div>
                      );
                    })}
                  </div>
                </div>

                <div className={s.Service}>
                  <div className={s.Service_Title}>
                    <span>Service</span>
                  </div>
                  <div className={s.Service_Tags}>
                    {serviceList?.map((item, index) => {
                      return (
                        <div
                          className={`${s.TagItem} ${
                            service == item ? s.TagItem__Active : ''
                          }`}
                          key={index}
                          onClick={() => setService(item)}
                        >
                          <span className={s.TagItem_Name}>{item}</span>
                        </div>
                      );
                    })}
                  </div>
                </div>
              </div>

              <BaseCheckbox
                checked={checked.isChecked2}
                onChange={() => setNewValue2('isChecked2')}
                className={s.Form_Rules}
              >
                I have read and agree with the&nbsp;
                <Link href={'/terms-of-service'}>Terms of service</Link>&nbsp;
                and&nbsp;
                <Link href={'/refund-policy'}>Refund Policy</Link>
              </BaseCheckbox>

              <BaseButton
                type="submit"
                design="gradient"
                className={s.Form_Button}
              >
                Proceed to checkout
              </BaseButton>

              <ToMainPage className={s.Form_ToMainPage} />
            </form>
          </div>
        </div>
      </BaseContainer>
    </section>
  );
};

export default Brief;
