//@ts-nocheck
import React from 'react';
import { ToastType, toast as toastOBj, useToaster } from 'react-hot-toast';
import s from './BaseToast.module.scss';

const BaseToast: React.FC = () => {
  const { toasts, handlers } = useToaster();
  const { startPause, endPause, calculateOffset, updateHeight } = handlers;

  // console.log('toasts: ', toasts);

  const typeIcon = (type: ToastType) => {
    switch (type) {
      case 'success':
        return (
          <>
            {/* <svg
              width="99"
              height="102"
              viewBox="0 0 99 102"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className={s.BaseToast_Icon}
            >
              <path
                d="M69.9518 127.051C69.9518 127.051 82.287 129.915 92.2269 117.239C99.842 107.528 98.7765 100.225 97.8621 97.3393C97.5951 96.496 96.7814 95.9571 95.9009 96.042C92.9177 96.3284 85.5994 97.9342 77.5599 106.43C67.0658 117.518 69.9518 127.051 69.9518 127.051Z"
                fill="#F98973"
              />
              <path
                d="M58.5008 98.9736C58.5008 98.9736 68.8307 102.897 78.9128 93.1052C86.6376 85.6026 86.5741 79.1627 86.1221 76.5604C85.9903 75.8 85.3499 75.2382 84.5783 75.2079C81.9657 75.1051 75.4493 75.6337 67.5002 82.0355C57.1255 90.3917 58.5008 98.9736 58.5008 98.9736Z"
                fill="#F98973"
              />
              <path
                d="M51.8158 75.7549C51.8158 75.7549 60.8462 80.2004 70.8303 72.1858C78.4799 66.0454 78.9754 60.2004 78.789 57.8017C78.7345 57.1006 78.2025 56.5368 77.5055 56.4429C75.1447 56.1255 69.19 56.0454 61.4321 61.1679C51.3051 67.8541 51.8158 75.7549 51.8158 75.7549Z"
                fill="#F98973"
              />
              <path
                d="M47.9538 54.5991C47.9538 54.5991 55.8138 57.8404 63.7802 50.5269C69.8839 44.9235 69.9743 39.9694 69.6831 37.9578C69.5982 37.3698 69.1179 36.924 68.5252 36.884C66.5177 36.7488 61.4946 37.0145 55.2418 41.7657C47.0816 47.9688 47.9538 54.5991 47.9538 54.5991Z"
                fill="#F98973"
              />
              <path
                d="M43.8793 36.4681C43.8793 36.4681 52.1561 38.41 58.8506 29.9164C63.9793 23.409 63.2761 18.5032 62.6668 16.5654C62.4887 15.9989 61.9436 15.6359 61.3522 15.6911C59.3488 15.8781 54.4327 16.9443 49.0211 22.6354C41.9574 30.0627 43.8793 36.4681 43.8793 36.4681Z"
                fill="#F98973"
              />
              <path
                d="M41.9762 108.048C41.9762 108.048 37.7032 118.684 23.1459 119.484C11.9928 120.098 7.12706 115.52 5.4612 113.346C4.974 112.71 4.99609 111.827 5.51572 111.217C7.27474 109.153 12.2613 104.556 22.7326 102.998C36.4003 100.964 41.9762 108.048 41.9762 108.048Z"
                fill="#F98973"
              />
              <path
                d="M32.0195 83.2976C32.0195 83.2976 27.0523 91.7429 14.6453 90.5635C5.1401 89.6602 1.61033 85.1705 0.47998 83.1203C0.14943 82.5213 0.28054 81.7774 0.797412 81.3288C2.54746 79.8079 7.34836 76.5583 16.3981 76.5762C28.2095 76.599 32.0195 83.2976 32.0195 83.2976Z"
                fill="#F98973"
              />
              <path
                d="M27.7663 61.0179C27.7663 61.0179 22.3402 67.729 11.684 65.0873C3.52028 63.0633 1.02978 58.693 0.311406 56.7594C0.101621 56.1943 0.31278 55.5635 0.82068 55.2399C2.54313 54.1426 7.14874 51.9364 15.0309 53.1289C25.3186 54.6857 27.7663 61.0179 27.7663 61.0179Z"
                fill="#F98973"
              />
              <path
                d="M25.7522 40.5156C25.7522 40.5156 19.0025 44.9384 10.2723 39.5398C3.58401 35.4042 2.61652 30.8013 2.52957 28.8746C2.50404 28.3115 2.87254 27.8105 3.41771 27.6677C5.26506 27.1839 9.99557 26.5359 16.6707 29.8518C25.3837 34.1786 25.7522 40.5156 25.7522 40.5156Z"
                fill="#F98973"
              />
              <path
                d="M36.3388 22.0988C36.3388 22.0988 30.9396 17.7671 33.0257 9.21286C34.6239 2.65915 38.1213 0.648249 39.6698 0.0658195C40.1225 -0.103941 40.629 0.0630582 40.8899 0.470207C41.7752 1.8483 43.5591 5.53541 42.6268 11.8607C41.4102 20.1162 36.3388 22.0988 36.3388 22.0988Z"
                fill="#F98973"
              />
              <path
                d="M24.0961 140.931C24.0864 140.809 24.1755 140.702 24.2983 140.694C43.9532 139.09 59.8941 133.811 62.4053 132.945C61.4047 131.107 60.3558 129.122 59.2785 126.997C57.6651 123.862 56.0296 120.411 54.3472 116.74C53.9394 115.817 53.5267 114.88 53.1085 113.933C52.8994 113.459 52.6896 112.982 52.4778 112.503C52.2756 112.019 52.0727 111.533 51.8691 111.043C51.4613 110.066 51.0486 109.077 50.6318 108.079C50.3882 107.461 50.1405 106.832 49.8941 106.206C47.5403 106.924 34.1216 110.801 14.5785 112.233C14.457 112.242 14.3508 112.15 14.3418 112.03C14.3328 111.907 14.4253 111.801 14.5454 111.793C33.9512 110.37 47.3001 106.533 49.7313 105.793C49.6305 105.538 49.5318 105.288 49.4311 105.031C48.6064 102.99 47.8618 100.877 47.0779 98.7517C46.6763 97.6924 46.3326 96.6042 45.9586 95.5214C45.5942 94.4352 45.214 93.3484 44.8579 92.2491C43.8946 89.1892 42.9533 86.0832 42.0907 82.9461C39.5049 83.1462 23.1941 84.32 7.55206 83.3518C7.4306 83.3442 7.33745 83.2394 7.34573 83.1179C7.35263 82.9958 7.4589 82.904 7.57967 82.9116C23.0209 83.8673 39.1219 82.7321 41.9699 82.5134C41.6325 81.2726 41.306 80.0277 40.9997 78.7773C39.5643 73.0827 38.3842 67.324 37.494 61.6653C34.8048 61.6646 21.2854 61.4935 7.89779 58.3515C7.7791 58.3239 7.70595 58.2052 7.73355 58.0865C7.76115 57.9679 7.87985 57.894 7.99854 57.9223C21.2454 61.0304 34.6198 61.2202 37.4292 61.2237C36.9282 57.9837 36.5183 54.7769 36.2153 51.6364C36.0311 49.7662 35.8861 47.9209 35.773 46.1053C32.7159 44.4588 16.6328 35.8349 8.97984 32.5052C8.86805 32.4569 8.81698 32.3272 8.86598 32.2154C8.9136 32.1029 9.04402 32.0511 9.15651 32.1015C16.6425 35.3587 32.1618 43.6618 35.7412 45.5878C35.3582 39.0914 35.4079 32.9952 35.7419 27.616C35.7923 26.7382 35.8413 25.8777 35.8889 25.0378C35.9393 24.198 36.0518 23.3816 36.127 22.5839C36.294 20.9898 36.4527 19.4771 36.6018 18.0563C36.8191 16.6437 37.0227 15.3222 37.2111 14.1C37.4119 12.88 37.5527 11.7524 37.757 10.7469C38.5975 6.73203 39.0771 4.4375 39.0771 4.4375L39.2248 4.47132C39.2248 4.47132 38.7769 6.7686 37.993 10.789C37.8025 11.7945 37.6776 12.9228 37.494 14.1428C37.3229 15.3643 37.138 16.6858 36.9399 18.097C36.8109 19.5165 36.6728 21.0271 36.5279 22.6191C36.4637 23.4154 36.3623 24.2304 36.3237 25.0682C36.2878 25.9066 36.2505 26.7644 36.2126 27.6408C35.9786 32.4748 35.9821 37.8809 36.3285 43.6293C38.7935 41.2292 51.346 28.972 58.1972 21.5605C58.2807 21.4722 58.4194 21.466 58.5091 21.5481C58.5988 21.6309 58.6043 21.7703 58.5215 21.86C51.3536 29.6145 37.9585 42.6605 36.3664 44.2083C36.4044 44.7997 36.4458 45.3953 36.4913 45.9936C36.5962 46.0529 36.6356 46.184 36.5776 46.2903C36.5631 46.3165 36.5397 46.3324 36.5183 46.3496C36.6514 48.061 36.8143 49.7966 37.0117 51.5542C37.2918 54.0896 37.6472 56.6698 38.0592 59.2721C40.4303 58.3246 52.5737 53.1442 64.2975 42.1574C64.3879 42.0711 64.5259 42.078 64.6094 42.167C64.6929 42.2561 64.6881 42.3962 64.5998 42.479C57.7065 48.9388 50.6663 53.4016 45.5307 56.1854C41.7829 58.217 39.0509 59.3535 38.1317 59.7179C39.1281 65.9107 40.4759 72.2367 42.141 78.4819C42.3129 79.1451 42.4992 79.8041 42.6807 80.4638C46.0138 78.7331 59.4801 71.5708 71.7863 62.628C71.8822 62.5562 72.0223 62.5783 72.0947 62.677C72.1665 62.7757 72.1444 62.913 72.0457 62.9855C62.2045 70.1368 51.6235 76.1515 46.0538 79.1706C44.5846 79.967 43.466 80.5536 42.7994 80.8993C43.8255 84.5905 44.9787 88.2362 46.1601 91.8185C46.5293 92.906 46.9219 93.9812 47.2987 95.0556C47.6852 96.1266 48.0406 97.2025 48.4546 98.2493C49.2178 100.234 49.9466 102.204 50.7395 104.116C54.577 101.576 67.6299 92.6845 79.3758 81.7384C79.4648 81.6535 79.6049 81.6604 79.6877 81.7495C79.7705 81.8385 79.7657 81.9786 79.6767 82.0614C67.8328 93.0979 54.664 102.05 50.9099 104.533C51.3136 105.518 51.7152 106.496 52.112 107.465C52.5392 108.451 52.9622 109.427 53.3811 110.393C53.5902 110.876 53.7986 111.357 54.0056 111.834C54.2223 112.308 54.4376 112.778 54.6515 113.246C55.0801 114.181 55.5024 115.105 55.9199 116.017C57.6403 119.638 59.3103 123.042 60.9541 126.13C61.9609 128.05 62.9429 129.856 63.8828 131.536C66.3588 129.739 79.0087 120.19 91.8414 103.799C91.9167 103.704 92.0554 103.686 92.1513 103.761C92.2472 103.836 92.2638 103.975 92.1892 104.071C79.2654 120.58 66.5092 130.178 64.1008 131.923C66.1076 135.493 67.917 138.485 69.3586 140.782C70.4413 142.506 71.3198 143.842 71.9277 144.742C72.5343 145.648 72.8628 146.104 72.8628 146.104L71.0589 147.375C71.0589 147.375 70.7104 146.876 70.1087 145.95C69.5007 145.022 68.6291 143.656 67.5574 141.896C66.1911 139.651 64.4963 136.764 62.6213 133.337C60.3358 134.129 44.2334 139.509 24.3356 141.133C24.212 141.143 24.1058 141.052 24.0961 140.931Z"
                fill="url(#paint0_linear_299_3390)"
              />
              <defs>
                <linearGradient
                  id="paint0_linear_299_3390"
                  x1="95.9507"
                  y1="86.3343"
                  x2="1.64193"
                  y2="66.4509"
                  gradientUnits="userSpaceOnUse"
                >
                  <stop stop-color="#F98973" />
                  <stop offset="1" stop-color="#6F6DD0" />
                </linearGradient>
              </defs>
            </svg> */}
          </>
        );

      case 'error':
        return (
          <>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 44 44"
              fill="none"
              className={s.BaseToast_Icon}
            >
              <path
                d="M22 14.6667V22M22 29.3333H22.0183M38.5 22C38.5 31.1127 31.1127 38.5 22 38.5C12.8873 38.5 5.5 31.1127 5.5 22C5.5 12.8873 12.8873 5.5 22 5.5C31.1127 5.5 38.5 12.8873 38.5 22Z"
                stroke="#ff5f5f"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            </svg>
          </>
        );
      default:
        return null;
    }
  };

  return (
    <div
      className={`${s.BaseToast} ${
        toasts[0]?.className == 'dashboard' ? s.BaseToastApp : ''
      }`}
      onMouseEnter={startPause}
      onMouseLeave={endPause}
    >
      {toasts.map((toast) => {
        const offset = calculateOffset(toast, {
          reverseOrder: true,
          gutter: 8,
        });

        const ref = (el) => {
          if (el && typeof toast.height !== 'number') {
            const height = el.getBoundingClientRect().height;
            updateHeight(toast.id, height);
          }
        };

        return (
          <div
            className={s.BaseToast_Wrapper}
            ref={ref}
            key={toast.id}
            style={{
              opacity: toast.visible ? 1 : 0,
              transform: `translateY(-${offset}px)`,
            }}
            {...toast.ariaProps}
          >
            <div className={s.BaseToast_Toast}>
              <svg
                viewBox="0 0 99 102"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                className={s.BaseToast_Toast_Flower}
              >
                <path
                  d="M69.9518 127.051C69.9518 127.051 82.287 129.915 92.2269 117.239C99.842 107.528 98.7765 100.225 97.8621 97.3393C97.5951 96.496 96.7814 95.9571 95.9009 96.042C92.9177 96.3284 85.5994 97.9342 77.5599 106.43C67.0658 117.518 69.9518 127.051 69.9518 127.051Z"
                  fill="#F98973"
                />
                <path
                  d="M58.5008 98.9736C58.5008 98.9736 68.8307 102.897 78.9128 93.1052C86.6376 85.6026 86.5741 79.1627 86.1221 76.5604C85.9903 75.8 85.3499 75.2382 84.5783 75.2079C81.9657 75.1051 75.4493 75.6337 67.5002 82.0355C57.1255 90.3917 58.5008 98.9736 58.5008 98.9736Z"
                  fill="#F98973"
                />
                <path
                  d="M51.8158 75.7549C51.8158 75.7549 60.8462 80.2004 70.8303 72.1858C78.4799 66.0454 78.9754 60.2004 78.789 57.8017C78.7345 57.1006 78.2025 56.5368 77.5055 56.4429C75.1447 56.1255 69.19 56.0454 61.4321 61.1679C51.3051 67.8541 51.8158 75.7549 51.8158 75.7549Z"
                  fill="#F98973"
                />
                <path
                  d="M47.9538 54.5991C47.9538 54.5991 55.8138 57.8404 63.7802 50.5269C69.8839 44.9235 69.9743 39.9694 69.6831 37.9578C69.5982 37.3698 69.1179 36.924 68.5252 36.884C66.5177 36.7488 61.4946 37.0145 55.2418 41.7657C47.0816 47.9688 47.9538 54.5991 47.9538 54.5991Z"
                  fill="#F98973"
                />
                <path
                  d="M43.8793 36.4681C43.8793 36.4681 52.1561 38.41 58.8506 29.9164C63.9793 23.409 63.2761 18.5032 62.6668 16.5654C62.4887 15.9989 61.9436 15.6359 61.3522 15.6911C59.3488 15.8781 54.4327 16.9443 49.0211 22.6354C41.9574 30.0627 43.8793 36.4681 43.8793 36.4681Z"
                  fill="#F98973"
                />
                <path
                  d="M41.9762 108.048C41.9762 108.048 37.7032 118.684 23.1459 119.484C11.9928 120.098 7.12706 115.52 5.4612 113.346C4.974 112.71 4.99609 111.827 5.51572 111.217C7.27474 109.153 12.2613 104.556 22.7326 102.998C36.4003 100.964 41.9762 108.048 41.9762 108.048Z"
                  fill="#F98973"
                />
                <path
                  d="M32.0195 83.2976C32.0195 83.2976 27.0523 91.7429 14.6453 90.5635C5.1401 89.6602 1.61033 85.1705 0.47998 83.1203C0.14943 82.5213 0.28054 81.7774 0.797412 81.3288C2.54746 79.8079 7.34836 76.5583 16.3981 76.5762C28.2095 76.599 32.0195 83.2976 32.0195 83.2976Z"
                  fill="#F98973"
                />
                <path
                  d="M27.7663 61.0179C27.7663 61.0179 22.3402 67.729 11.684 65.0873C3.52028 63.0633 1.02978 58.693 0.311406 56.7594C0.101621 56.1943 0.31278 55.5635 0.82068 55.2399C2.54313 54.1426 7.14874 51.9364 15.0309 53.1289C25.3186 54.6857 27.7663 61.0179 27.7663 61.0179Z"
                  fill="#F98973"
                />
                <path
                  d="M25.7522 40.5156C25.7522 40.5156 19.0025 44.9384 10.2723 39.5398C3.58401 35.4042 2.61652 30.8013 2.52957 28.8746C2.50404 28.3115 2.87254 27.8105 3.41771 27.6677C5.26506 27.1839 9.99557 26.5359 16.6707 29.8518C25.3837 34.1786 25.7522 40.5156 25.7522 40.5156Z"
                  fill="#F98973"
                />
                <path
                  d="M36.3388 22.0988C36.3388 22.0988 30.9396 17.7671 33.0257 9.21286C34.6239 2.65915 38.1213 0.648249 39.6698 0.0658195C40.1225 -0.103941 40.629 0.0630582 40.8899 0.470207C41.7752 1.8483 43.5591 5.53541 42.6268 11.8607C41.4102 20.1162 36.3388 22.0988 36.3388 22.0988Z"
                  fill="#F98973"
                />
                <path
                  d="M24.0961 140.931C24.0864 140.809 24.1755 140.702 24.2983 140.694C43.9532 139.09 59.8941 133.811 62.4053 132.945C61.4047 131.107 60.3558 129.122 59.2785 126.997C57.6651 123.862 56.0296 120.411 54.3472 116.74C53.9394 115.817 53.5267 114.88 53.1085 113.933C52.8994 113.459 52.6896 112.982 52.4778 112.503C52.2756 112.019 52.0727 111.533 51.8691 111.043C51.4613 110.066 51.0486 109.077 50.6318 108.079C50.3882 107.461 50.1405 106.832 49.8941 106.206C47.5403 106.924 34.1216 110.801 14.5785 112.233C14.457 112.242 14.3508 112.15 14.3418 112.03C14.3328 111.907 14.4253 111.801 14.5454 111.793C33.9512 110.37 47.3001 106.533 49.7313 105.793C49.6305 105.538 49.5318 105.288 49.4311 105.031C48.6064 102.99 47.8618 100.877 47.0779 98.7517C46.6763 97.6924 46.3326 96.6042 45.9586 95.5214C45.5942 94.4352 45.214 93.3484 44.8579 92.2491C43.8946 89.1892 42.9533 86.0832 42.0907 82.9461C39.5049 83.1462 23.1941 84.32 7.55206 83.3518C7.4306 83.3442 7.33745 83.2394 7.34573 83.1179C7.35263 82.9958 7.4589 82.904 7.57967 82.9116C23.0209 83.8673 39.1219 82.7321 41.9699 82.5134C41.6325 81.2726 41.306 80.0277 40.9997 78.7773C39.5643 73.0827 38.3842 67.324 37.494 61.6653C34.8048 61.6646 21.2854 61.4935 7.89779 58.3515C7.7791 58.3239 7.70595 58.2052 7.73355 58.0865C7.76115 57.9679 7.87985 57.894 7.99854 57.9223C21.2454 61.0304 34.6198 61.2202 37.4292 61.2237C36.9282 57.9837 36.5183 54.7769 36.2153 51.6364C36.0311 49.7662 35.8861 47.9209 35.773 46.1053C32.7159 44.4588 16.6328 35.8349 8.97984 32.5052C8.86805 32.4569 8.81698 32.3272 8.86598 32.2154C8.9136 32.1029 9.04402 32.0511 9.15651 32.1015C16.6425 35.3587 32.1618 43.6618 35.7412 45.5878C35.3582 39.0914 35.4079 32.9952 35.7419 27.616C35.7923 26.7382 35.8413 25.8777 35.8889 25.0378C35.9393 24.198 36.0518 23.3816 36.127 22.5839C36.294 20.9898 36.4527 19.4771 36.6018 18.0563C36.8191 16.6437 37.0227 15.3222 37.2111 14.1C37.4119 12.88 37.5527 11.7524 37.757 10.7469C38.5975 6.73203 39.0771 4.4375 39.0771 4.4375L39.2248 4.47132C39.2248 4.47132 38.7769 6.7686 37.993 10.789C37.8025 11.7945 37.6776 12.9228 37.494 14.1428C37.3229 15.3643 37.138 16.6858 36.9399 18.097C36.8109 19.5165 36.6728 21.0271 36.5279 22.6191C36.4637 23.4154 36.3623 24.2304 36.3237 25.0682C36.2878 25.9066 36.2505 26.7644 36.2126 27.6408C35.9786 32.4748 35.9821 37.8809 36.3285 43.6293C38.7935 41.2292 51.346 28.972 58.1972 21.5605C58.2807 21.4722 58.4194 21.466 58.5091 21.5481C58.5988 21.6309 58.6043 21.7703 58.5215 21.86C51.3536 29.6145 37.9585 42.6605 36.3664 44.2083C36.4044 44.7997 36.4458 45.3953 36.4913 45.9936C36.5962 46.0529 36.6356 46.184 36.5776 46.2903C36.5631 46.3165 36.5397 46.3324 36.5183 46.3496C36.6514 48.061 36.8143 49.7966 37.0117 51.5542C37.2918 54.0896 37.6472 56.6698 38.0592 59.2721C40.4303 58.3246 52.5737 53.1442 64.2975 42.1574C64.3879 42.0711 64.5259 42.078 64.6094 42.167C64.6929 42.2561 64.6881 42.3962 64.5998 42.479C57.7065 48.9388 50.6663 53.4016 45.5307 56.1854C41.7829 58.217 39.0509 59.3535 38.1317 59.7179C39.1281 65.9107 40.4759 72.2367 42.141 78.4819C42.3129 79.1451 42.4992 79.8041 42.6807 80.4638C46.0138 78.7331 59.4801 71.5708 71.7863 62.628C71.8822 62.5562 72.0223 62.5783 72.0947 62.677C72.1665 62.7757 72.1444 62.913 72.0457 62.9855C62.2045 70.1368 51.6235 76.1515 46.0538 79.1706C44.5846 79.967 43.466 80.5536 42.7994 80.8993C43.8255 84.5905 44.9787 88.2362 46.1601 91.8185C46.5293 92.906 46.9219 93.9812 47.2987 95.0556C47.6852 96.1266 48.0406 97.2025 48.4546 98.2493C49.2178 100.234 49.9466 102.204 50.7395 104.116C54.577 101.576 67.6299 92.6845 79.3758 81.7384C79.4648 81.6535 79.6049 81.6604 79.6877 81.7495C79.7705 81.8385 79.7657 81.9786 79.6767 82.0614C67.8328 93.0979 54.664 102.05 50.9099 104.533C51.3136 105.518 51.7152 106.496 52.112 107.465C52.5392 108.451 52.9622 109.427 53.3811 110.393C53.5902 110.876 53.7986 111.357 54.0056 111.834C54.2223 112.308 54.4376 112.778 54.6515 113.246C55.0801 114.181 55.5024 115.105 55.9199 116.017C57.6403 119.638 59.3103 123.042 60.9541 126.13C61.9609 128.05 62.9429 129.856 63.8828 131.536C66.3588 129.739 79.0087 120.19 91.8414 103.799C91.9167 103.704 92.0554 103.686 92.1513 103.761C92.2472 103.836 92.2638 103.975 92.1892 104.071C79.2654 120.58 66.5092 130.178 64.1008 131.923C66.1076 135.493 67.917 138.485 69.3586 140.782C70.4413 142.506 71.3198 143.842 71.9277 144.742C72.5343 145.648 72.8628 146.104 72.8628 146.104L71.0589 147.375C71.0589 147.375 70.7104 146.876 70.1087 145.95C69.5007 145.022 68.6291 143.656 67.5574 141.896C66.1911 139.651 64.4963 136.764 62.6213 133.337C60.3358 134.129 44.2334 139.509 24.3356 141.133C24.212 141.143 24.1058 141.052 24.0961 140.931Z"
                  fill="url(#paint0_linear_299_3390)"
                />
                <defs>
                  <linearGradient
                    id="paint0_linear_299_3390"
                    x1="95.9507"
                    y1="86.3343"
                    x2="1.64193"
                    y2="66.4509"
                    gradientUnits="userSpaceOnUse"
                  >
                    <stop stopColor="#F98973" />
                    <stop offset="1" stopColor="#6F6DD0" />
                  </linearGradient>
                </defs>
              </svg>

              <div className={s.BaseToast_Content}>
                {typeIcon(toast.type)}

                {toasts[0]?.type != 'custom' ? (
                  <div className={s.Text}>
                    <p>{toast.message}</p>
                  </div>
                ) : (
                  <>{toast.message}</>
                )}
              </div>

              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 19 18"
                fill="none"
                className={s.BaseToast_Close}
                onClick={() => {
                  toast.visible = false;
                  toastOBj.dismiss(toast.id);
                }}
              >
                <path
                  opacity="0.2"
                  d="M2 16.5L17 1.5M2 1.5L17 16.5"
                  stroke="#2D2D2D"
                  strokeWidth="2.5"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </svg>
            </div>
          </div>
        );
      })}
    </div>
  );
};

export default BaseToast;
